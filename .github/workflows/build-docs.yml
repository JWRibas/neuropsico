name: Build and deploy documentation with Algolia Search

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  pages: write

env:
  INSTANCE: 'Writerside/n'
  DOCKER_VERSION: '243.21565'
  ALGOLIA_APP_NAME: 'J6S4WZ4YMX'
  ALGOLIA_INDEX_NAME: 'docs_index'
  CONFIG_JSON_PRODUCT: 'neuropsico'
  CONFIG_JSON_VERSION: '1.0'
  ALGOLIA_API_KEY: ${{ secrets.ALGOLIA_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      algolia_artifact: ${{ steps.define-ids.outputs.algolia_artifact }}
      artifact: ${{ steps.define-ids.outputs.artifact }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Define instance id and artifacts
        id: define-ids
        run: |
          INSTANCE=${INSTANCE#*/}
          INSTANCE_ID_UPPER=$(echo "$INSTANCE" | tr '[:lower:]' '[:upper:]')
          ARTIFACT="webHelp${INSTANCE_ID_UPPER}2-all.zip"
          ALGOLIA_ARTIFACT="algolia-indexes-${INSTANCE_ID_UPPER}.zip"

          echo "INSTANCE_ID_UPPER: $INSTANCE_ID_UPPER"
          echo "ARTIFACT: $ARTIFACT"
          echo "ALGOLIA_ARTIFACT: $ALGOLIA_ARTIFACT"

          echo "INSTANCE_ID_UPPER=$INSTANCE_ID_UPPER" >> $GITHUB_ENV
          echo "ARTIFACT=$ARTIFACT" >> $GITHUB_ENV
          echo "ALGOLIA_ARTIFACT=$ALGOLIA_ARTIFACT" >> $GITHUB_ENV
          echo "artifact=$ARTIFACT" >> $GITHUB_OUTPUT
          echo "algolia_artifact=$ALGOLIA_ARTIFACT" >> $GITHUB_OUTPUT

      - name: Build docs using Writerside Docker builder
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          artifact: ${{ env.ARTIFACT }}
          docker-version: ${{ env.DOCKER_VERSION }}

      - name: Save artifact with build results
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: |
            artifacts/${{ env.ARTIFACT }}
            artifacts/report.json
            artifacts/${{ env.ALGOLIA_ARTIFACT }}
          retention-days: 7

  publish-indexes:
    needs: [build]
    runs-on: ubuntu-latest
    container:
      image: registry.jetbrains.team/p/writerside/builder/algolia-publisher:2.0.32-3
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: artifacts

      - name: Unzip Algolia artifact
        run: unzip -O UTF-8 -qq "artifacts/${{ needs.build.outputs.algolia_artifact }}" -d algolia-indexes

      - name: Publish Algolia Search Indexes
        run: |
          if [ -z "${{ secrets.ALGOLIA_KEY }}" ]; then
            echo "ALGOLIA_KEY secret is not set in GitHub Secrets"
            exit 1
          else
            # Limpa o índice existente
            curl -X DELETE \
              -H "X-Algolia-API-Key: ${{ secrets.ALGOLIA_KEY }}" \
              -H "X-Algolia-Application-Id: ${{ env.ALGOLIA_APP_NAME }}" \
              "https://${{ env.ALGOLIA_APP_NAME }}.algolia.net/1/indexes/${{ env.ALGOLIA_INDEX_NAME }}"

            # Configura o índice principal
            curl -X PUT \
              -H "X-Algolia-API-Key: ${{ secrets.ALGOLIA_KEY }}" \
              -H "X-Algolia-Application-Id: ${{ env.ALGOLIA_APP_NAME }}" \
              "https://${{ env.ALGOLIA_APP_NAME }}.algolia.net/1/indexes/${{ env.ALGOLIA_INDEX_NAME }}/settings" \
              -d '{
                "searchableAttributes": [
                  "unordered(title)",
                  "unordered(h1)",
                  "unordered(h2)",
                  "unordered(h3)",
                  "unordered(h4)",
                  "unordered(content)",
                  "unordered(text)",
                  "unordered(chapter)",
                  "unordered(list)",
                  "unordered(tab)",
                  "unordered(topic)",
                  "unordered(p)",
                  "unordered(a)",
                  "unordered(video)",
                  "unordered(img)",
                  "unordered(src)",
                  "unordered(href)"
                ],
                "attributesForFaceting": ["searchable(product)", "searchable(version)"],
                "queryLanguages": ["pt"],
                "ignorePlurals": true,
                "attributesToHighlight": ["*"],
                "highlightPreTag": "<mark>",
                "highlightPostTag": "</mark>",
                "snippetEllipsisText": "...",
                "attributesToSnippet": ["content:50"],
                "distinct": true,
                "advancedSyntax": true,
                "typoTolerance": true,
                "removeWordsIfNoResults": "allOptional",
                "ranking": ["typo", "geo", "words", "filters", "proximity", "attribute", "exact", "custom"],
                "customRanking": ["desc(importance)", "asc(position)"],
                "separatorsToIndex": "_",
                "allowTyposOnNumericTokens": false,
                "minWordSizefor1Typo": 4,
                "minWordSizefor2Typos": 8,
                "hitsPerPage": 20
              }'

            # Atualiza o índice principal
            env "algolia-key=${{ secrets.ALGOLIA_KEY }}" java -jar /opt/builder/help-publication-agent.jar \
            update-index \
            --application-name ${{ env.ALGOLIA_APP_NAME }} \
            --index-name ${{ env.ALGOLIA_INDEX_NAME }} \
            --product ${{ env.CONFIG_JSON_PRODUCT }} \
            --version ${{ env.CONFIG_JSON_VERSION }} \
            --index-directory algolia-indexes/ \
            2>&1 | tee algolia-update-index-log.txt
          fi

  deploy:
    needs: [build, publish-indexes]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: artifacts

      - name: Unzip artifact
        run: unzip -O UTF-8 -qq "artifacts/${{ needs.build.outputs.artifact }}" -d dir

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Package and upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dir

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4